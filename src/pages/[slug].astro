---
import Layout from "../layouts/Layout.astro";
import Header from "../components/Header-two.astro";

import Footer from "../components/Footer.astro";
import Ucta from "../components/Ucta.astro";

export async function getStaticPaths() {
    const works = await Astro.glob('../works/*.md')

    return works.map(work => ({
        params: {
            slug: work.frontmatter.slug
        },
        props: {
            work
        }
    }))
}

const { Content, frontmatter } = Astro.props.work
---

<Layout title={frontmatter.title}>
    <div class="innerCursor"></div>
	<div class="outerCursor"></div>
    <Header />
    <section class="work-name">
        <div class="work-title">
            <h1>{frontmatter.title.toUpperCase()}</h1>
            <h3>{frontmatter.subtitle.toUpperCase()}</h3>
        </div>
    </section>
    <Content />
    <Ucta />
    <Footer />
</Layout>

<style lang="scss">
    .work-name {
        height: 20vh;
        width: 100%;
        display: flex;
        justify-content: center;
        align-items: flex-end;

        .work-title {
            width: 100%;
            padding-inline: 1rem;
            h1 {
                font-size: var(--fs-600);
                color: hsl(var(--clr-floral-white) );
            }
            h3 {
                font-size: var(--fs-400);
                color: hsl(var(--clr-bone) );
            }
        }
    }
    @media screen and (min-width: '768px') {
		.work-name {
            height: 30vh;
			.work-title {
                width: 700px;
            }
		}
	}
	@media screen and (min-width: '1024px') {
		.work-name {
			.work-title {
                width: 900px;
            }
		}
	}
	@media screen and (min-width: '1366px') {
		.work-name {
            height: 50vh;
			.work-title {
                width: 1200px;
                
                h1 {
                    font-size: var(--fs-900);
                }
                h3 {
                    font-size: var(--fs-600);
                }
            }
		}
	}
	
</style>

<script>
    let innerCursor = document.querySelector('.innerCursor')
	let outerCursor = document.querySelector('.outerCursor')

	document.addEventListener('mousemove', moveCursor) 

	function moveCursor(e) {
		let x = e.clientX
		let y= e.clientY

		innerCursor.style.left = `${x}px`
		innerCursor.style.top = `${y}px`
		outerCursor.style.left = `${x}px`
		outerCursor.style.top = `${y}px`
	}

	let hovereds = Array.from(document.querySelectorAll("a, .hamburger"))

	hovereds.forEach(hovered => {
		hovered.addEventListener("mouseover", () => {
			innerCursor.classList.add('grow')
		})
		hovered.addEventListener("mouseleave", () => {
			innerCursor.classList.remove('grow')
		})
	})
</script>